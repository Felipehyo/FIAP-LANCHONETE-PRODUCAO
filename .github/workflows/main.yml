name: PR Checks

# on:
#   pull_request:
#     branches:
#       - main
on:
  workflow_dispatch:

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run tests
        run: mvn clean verify

      - name: Verify test coverage
        run: |
          COVERAGE=$(mvn jacoco:report | grep -oP '(?<=\[INFO\] Overall coverage rate \(instructions\): )\d+(?=\.\d+%)')
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Test coverage is below 80% ($COVERAGE%)." >&2
            exit 1
          fi

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

  merge-check:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
      - name: Block merge if tests fail
        run: |
          echo "Blocking merge if any previous step failed."
          if [ "${{ needs.build-and-analyze.result }}" != "success" ]; then
            exit 1
          fi
